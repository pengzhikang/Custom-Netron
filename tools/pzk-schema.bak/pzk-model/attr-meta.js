"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.AttrMeta = void 0;
var flatbuffers = require("./flatbuffers");
var data_type_1 = require("../pzk-model/data-type");
var AttrMeta = /** @class */ (function () {
    function AttrMeta() {
        this.bb = null;
        this.bb_pos = 0;
    }
    AttrMeta.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    AttrMeta.getRootAsAttrMeta = function (bb, obj) {
        return (obj || new AttrMeta()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    AttrMeta.getSizePrefixedRootAsAttrMeta = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new AttrMeta()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    AttrMeta.prototype.key = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    AttrMeta.prototype.require = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    };
    AttrMeta.prototype.bufferData = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt8(this.bb_pos + offset) : data_type_1.DataType.INT32;
    };
    AttrMeta.prototype.bufferEleNum = function () {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    AttrMeta.prototype.buffer = function (index) {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
    };
    AttrMeta.prototype.bufferLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    AttrMeta.prototype.bufferArray = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
    };
    AttrMeta.startAttrMeta = function (builder) {
        builder.startObject(5);
    };
    AttrMeta.addKey = function (builder, keyOffset) {
        builder.addFieldOffset(0, keyOffset, 0);
    };
    AttrMeta.addRequire = function (builder, require) {
        builder.addFieldInt8(1, +require, +false);
    };
    AttrMeta.addBufferData = function (builder, bufferData) {
        builder.addFieldInt8(2, bufferData, data_type_1.DataType.INT32);
    };
    AttrMeta.addBufferEleNum = function (builder, bufferEleNum) {
        builder.addFieldInt32(3, bufferEleNum, 0);
    };
    AttrMeta.addBuffer = function (builder, bufferOffset) {
        builder.addFieldOffset(4, bufferOffset, 0);
    };
    AttrMeta.createBufferVector = function (builder, data) {
        builder.startVector(1, data.length, 1);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addInt8(data[i]);
        }
        return builder.endVector();
    };
    AttrMeta.startBufferVector = function (builder, numElems) {
        builder.startVector(1, numElems, 1);
    };
    AttrMeta.endAttrMeta = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    AttrMeta.createAttrMeta = function (builder, keyOffset, require, bufferData, bufferEleNum, bufferOffset) {
        AttrMeta.startAttrMeta(builder);
        AttrMeta.addKey(builder, keyOffset);
        AttrMeta.addRequire(builder, require);
        AttrMeta.addBufferData(builder, bufferData);
        AttrMeta.addBufferEleNum(builder, bufferEleNum);
        AttrMeta.addBuffer(builder, bufferOffset);
        return AttrMeta.endAttrMeta(builder);
    };
    return AttrMeta;
}());
exports.AttrMeta = AttrMeta;
